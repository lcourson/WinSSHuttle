###############################
# Core EditorConfig Options   #
###############################

root = true

# All files
[*]
indent_style             = tab
end_of_line              = crlf
trim_trailing_whitespace = true
charset                  = utf-8-bom
tab_width                = unset

# package.json
[package.json]
charset                  = utf-8

# Code files
[*.{cs,csx,vb,vbx}]
indent_size          = tab
insert_final_newline = true

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = tab

################################################################################################################
############################################# Language Conventions #############################################
################################################################################################################

###############################
# .NET Code Style Settings    #
###############################
# this. preferences
[*.{cs,vb}]
dotnet_style_qualification_for_field    = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method   = false:silent
dotnet_style_qualification_for_event    = false:silent

# Language keywords vs BCL types preferences
[*.{cs,vb}]
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access             = true:silent

# Modifier preferences
[*.{cs,vb}]
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion
csharp_preferred_modifier_order              = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:silent
dotnet_style_readonly_field                  = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators      = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators             = never_if_unnecessary:silent

# Expression-level preferences
[*.{cs,vb}]
dotnet_style_object_initializer                                  = true:silent
dotnet_style_collection_initializer                              = true:silent
dotnet_style_explicit_tuple_names                                = true:silent
dotnet_style_prefer_inferred_tuple_names                         = true:silent
dotnet_style_prefer_inferred_anonymous_type_member_names         = true:silent
dotnet_style_prefer_auto_properties                              = true:silent
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent
dotnet_style_prefer_conditional_expression_over_assignment       = true:silent
dotnet_style_prefer_conditional_expression_over_return           = true:silent
dotnet_style_prefer_compound_assignment                          = true:silent

# Null-checking preferences
[*.{cs,vb}]
dotnet_style_coalesce_expression                                 = true:silent
dotnet_style_null_propagation                                    = true:silent

# .NET Code Quality Settings
[*.{cs,vb}]
dotnet_code_quality_unused_parameters = all:suggestion

###############################
# C# Code Style Settings      #
###############################

# Implicit and explicit types
[*.cs]
csharp_style_var_for_built_in_types    = true:silent
csharp_style_var_when_type_is_apparent = true:silent
csharp_style_var_elsewhere             = true:silent

# Expression-bodied members
[*.cs]
csharp_style_expression_bodied_methods         = when_on_single_line:silent
csharp_style_expression_bodied_constructors    = when_on_single_line:silent
csharp_style_expression_bodied_operators       = false:suggestion
csharp_style_expression_bodied_properties      = when_on_single_line:silent
csharp_style_expression_bodied_indexers        = when_on_single_line:silent
csharp_style_expression_bodied_accessors       = when_on_single_line:silent
csharp_style_expression_bodied_lambdas         = when_on_single_line:silent
csharp_style_expression_bodied_local_functions = when_on_single_line:silent

# Pattern-matching preferences
[*.cs]
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = false:suggestion

# Inlined variable declarations
[*.cs]
csharp_style_inlined_variable_declaration = true:silent

# Expression-level preferences
[*.cs]
csharp_prefer_simple_default_expression            = true:silent

# Null-checking preferences
[*.cs]
csharp_style_throw_expression          = true:silent
csharp_style_conditional_delegate_call = true:silent

# Code block preferences
[*.cs]
csharp_prefer_braces                               = true:silent

# Unused value preferences
[*.cs]
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
csharp_style_unused_value_assignment_preference           = discard_variable:silent

# Index and range preferences
[*.cs]
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion

# Miscellaneous preferences
[*.cs]
csharp_style_deconstructed_variable_declaration    = false:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_using_directive_placement                   = outside_namespace:silent
csharp_prefer_static_local_function                = true:suggestion
csharp_prefer_simple_using_statement               = false:silent
csharp_style_prefer_switch_expression              = true:none

################################################################################################################
############################################ Formatting Conventions ############################################
################################################################################################################

###############################
# .NET Formatting Rules       #
###############################

# Organize usings
[*.{cs,vb}]
dotnet_sort_system_directives_first     = true
dotnet_separate_import_directive_groups = false

###############################
# C# Formatting Rules         #
###############################

# New line preferences
[*.cs]
csharp_new_line_before_open_brace                     = types, local_functions, methods, properties, control_blocks
csharp_new_line_before_else                           = true
csharp_new_line_before_catch                          = true
csharp_new_line_before_finally                        = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types     = true
csharp_new_line_between_query_expression_clauses      = true

# Indentation preferences
[*.cs]
csharp_indent_case_contents            = true
csharp_indent_switch_labels            = true
csharp_indent_labels                   = no_change
csharp_indent_block_contents           = true
csharp_indent_braces                   = false
csharp_indent_case_contents_when_block = true

# Space preferences
[*.cs]
csharp_space_after_cast                                                  = false
csharp_space_after_keywords_in_control_flow_statements                   = true
csharp_space_between_parentheses                                         = false
csharp_space_before_colon_in_inheritance_clause                          = true
csharp_space_after_colon_in_inheritance_clause                           = true
csharp_space_around_binary_operators                                     = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses       = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_opening_parenthesis     = false
csharp_space_between_method_call_parameter_list_parentheses              = false
csharp_space_between_method_call_empty_parameter_list_parentheses        = false
csharp_space_between_method_call_name_and_opening_parenthesis            = false
csharp_space_after_comma                                                 = true
csharp_space_before_comma                                                = false
csharp_space_after_dot                                                   = false
csharp_space_before_dot                                                  = false
csharp_space_after_semicolon_in_for_statement                            = true
csharp_space_before_semicolon_in_for_statement                           = false
csharp_space_around_declaration_statements                               = false
csharp_space_before_open_square_brackets                                 = false
csharp_space_between_empty_square_brackets                               = false
csharp_space_between_square_brackets                                     = false

# Wrapping preferences
[*.cs]
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks     = true

################################################################################################################
############################################## Naming Conventions ##############################################
#################### Styles are applied from Most Specific (top) to Least Specific (bottom) ####################
################################################################################################################

# Style Definitions
dotnet_naming_style.pascal_case_style.capitalization                          = pascal_case
dotnet_naming_style.camel_case_style.capitalization                           = camel_case

# Async methods are PascalCase with Async appended
#==============================
dotnet_naming_rule.async_members_rule.severity                                = suggestion
dotnet_naming_rule.async_members_rule.symbols                                 = async_members_symbols
dotnet_naming_rule.async_members_rule.style                                   = async_member_style

dotnet_naming_symbols.async_members_symbols.required_modifiers                = async

dotnet_naming_style.async_member_style.capitalization                         = pascal_case
dotnet_naming_style.async_member_style.required_suffix                        = Async

# Interfaces are PascalCase with prefixed I
#==============================
dotnet_naming_rule.interfaces_should_be_pascal_case_prefixed_with_i.severity  = warning
dotnet_naming_rule.interfaces_should_be_pascal_case_prefixed_with_i.symbols   = interfaces
dotnet_naming_rule.interfaces_should_be_pascal_case_prefixed_with_i.style     = interface_style

dotnet_naming_symbols.interfaces.applicable_kinds                             = interface

dotnet_naming_style.interface_style.capitalization                            = pascal_case
dotnet_naming_style.interface_style.required_prefix                           = I

# Non-private fields are PascalCase
#==============================
dotnet_naming_rule.non_private_fields_should_be_pascal_case.severity          = warning
dotnet_naming_rule.non_private_fields_should_be_pascal_case.symbols           = non_private_fields
dotnet_naming_rule.non_private_fields_should_be_pascal_case.style             = pascal_case_style

dotnet_naming_symbols.non_private_fields.applicable_kinds                     = field
dotnet_naming_symbols.non_private_fields.applicable_accessibilities           = public, protected, internal, protected_internal, private_protected

# Constants are PascalCase
#==============================
dotnet_naming_rule.constants_should_be_pascal_case.severity                   = warning
dotnet_naming_rule.constants_should_be_pascal_case.symbols                    = constants
dotnet_naming_rule.constants_should_be_pascal_case.style                      = pascal_case_style

dotnet_naming_symbols.constants.applicable_kinds                              = field, local
dotnet_naming_symbols.constants.required_modifiers                            = const

# Private fields are camelCase and start with _
#==============================
dotnet_naming_rule.private_fields_should_be_camel_case.severity               = warning
dotnet_naming_rule.private_fields_should_be_camel_case.symbols                = private_fields
dotnet_naming_rule.private_fields_should_be_camel_case.style                  = private_field_style

dotnet_naming_symbols.private_fields.applicable_kinds                         = field
dotnet_naming_symbols.private_fields.applicable_accessibilities               = private

dotnet_naming_style.private_field_style.capitalization                        = camel_case
dotnet_naming_style.private_field_style.required_prefix                       = _

# Locals and parameters are camelCase
#==============================
dotnet_naming_rule.locals_should_be_camel_case.severity                       = warning
dotnet_naming_rule.locals_should_be_camel_case.symbols                        = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style                          = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds                  = parameter, local

# Local functions are PascalCase
#==============================
dotnet_naming_rule.local_functions_should_be_pascal_case.severity             = warning
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols              = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style                = pascal_case_style

dotnet_naming_symbols.local_functions.applicable_kinds                        = local_function

# By default, name items with PascalCase
#==============================
dotnet_naming_rule.members_should_be_pascal_case.severity                     = warning
dotnet_naming_rule.members_should_be_pascal_case.symbols                      = all_members
dotnet_naming_rule.members_should_be_pascal_case.style                        = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds                            = *